version: "3.8"

services:
  server:
    build:
      context: ./  # 빌드를 위한 root context
      dockerfile: module-api/Dockerfile
    container_name: server-container
    networks:
      - my-network
    ports:
      - "8080:8080"
    env_file:
      - .env.local
    environment:
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}

      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_EXPIRE_IN_TIME: ${S3_EXPIRE_IN_TIME}

      MYSQL_DOMAIN: ${MYSQL_DOMAIN}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

      KAFKA_DOMAIN: ${KAFKA_DOMAIN}

      REDIS_DOMAIN: ${REDIS_DOMAIN}
      REDIS_PORT: ${REDIS_PORT}

      SPRING_PROFILES_ACTIVE: local  # 활성 프로파일
    depends_on:
      - db
      - redis
      - kafka

  db:
    image: mysql:latest
    container_name: db-container
    networks:
      - my-network
    ports:
      - "13306:3306"
    env_file:
      - .env.local
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}

  redis:
    image: redis:latest
    container_name: redis-container
    networks:
      - my-network
    ports:
      - "6381:6380"
    command: ["redis-server", "--port", "6380"]

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper-container
    networks:
      - my-network
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka-container
    networks:
      - my-network
    ports:
      - "9092:9092"
      - "9094:9094"
    env_file:
      - .env.local
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Kafka Broker가 Client로부터 듣고있는 네트워크
      # Kafka Broker는 9092포트에서 PLAINTEXT 프로토콜을 사용하여, 들어오는 Client 연결을 수신
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      # Kafka Broker가 Client에게 알려주는 네트워크
      # Client는 ${KAFKA_DOMAIN}의 9092포트에서 PLAINTEXT 프로토콜을 사용하여, Kafka Broker에 연결
      KAFKA_ADVERTISED_LISTENERS: INSIDE://${KAFKA_DOMAIN}:9092,OUTSIDE://${KAFKA_DOMAIN}:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper

networks:
  my-network:
    external: true
